
import React from "react";
import ComponentA from "./ComponentA";
import ComponentB from "./ComponentB";

const App = () => {
  return (
    <div>
      <h1>App Component</h1>
      <ComponentA />
      <ComponentB />
    </div>
  );
};

export default App;

=================================================================================================================== zustand.jsx


import { create } from "zustand";
import { persist } from "zustand/middleware";

const useStore = create(
  persist(
    (set) => ({
      data1: {},
      data2: {},
      setData1: (newData) => set({ data1: newData }),
      setData2: (newData) => set({ data2: newData }),
    }),
    {
      name: "hello",
      Storage: () => localStorage,
    }
  )
);

export default useStore;



========================================================================================================================================================


import React from "react";
import useStore from "./Zustand";

const ComponentA = () => {
  const { data1, data2, setData1, setData2 } = useStore();

  const updateData1 = () => {
    const newData = { a: 40, b: 22 };
    setData1(newData);
  };

  const updateData2 = () => {
    const newData = { a: 20, b: 12 };
    setData2(newData);
  };

  return (
    <div>
      <div>
        <button onClick={updateData1}>Update Data 1</button>
      </div>
      <div>
        <button onClick={updateData2}>Update Data 2</button>
      </div>
    </div>
  );
};

export default ComponentA;



============================================================================================================================================================



import React from "react";
import useStore from "./Zustand";

const ComponentB = () => {
  const { data1, data2 } = useStore();

  return (
    <div>
      <h2>Data 1 in Component B: {JSON.stringify(data1)}</h2>
      <h2>Data 2 in Component B: {JSON.stringify(data2)}</h2>
    </div>
  );
};

export default ComponentB;




